services:
  #vacancy service:
  vacancy:
    build: ./service/vacancy
    container_name: vacancy
    restart: unless-stopped
    ports:
      - ${VACANCIES_PORT}:${VACANCIES_PORT}
    environment:
      - POSTGRES_PASSWORD=${VACANCIES_DB_PASSWORD}
    depends_on:
      - vacancy_db
    networks:
      - netservices
  vacancy_db:
    image: postgres:latest
    container_name: vacancy_db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${VACANCIES_DB_PASSWORD}
      - PORT=${PROFILE_PORT}
    volumes:
      - vacancy:/var/lib/postgresql/data
    networks:
      - netservices

  #profile service:
  profile:
    build: ./service/profile
    container_name: profile
    ports:
      - ${PROFILE_PORT}:${PROFILE_PORT}
    environment:
      - POSTGRES_PSASWORD=${PROFILE_DB_PASSWORD}
      - PORT=${PROFILE_PORT}
    networks:
      - netservices
  profile_db:
    image: postgres:latest
    container_name: profile_db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${PROFILE_DB_PASSWORD}
    volumes:
      - profile:/var/lib/postgresql/data
    networks:
      - netservices
  
  #authentication service:
  authentication:
    build: ./service/authentication
    container_name: authentication
    restart: always
    ports:
      - ${AUTHENTICATION_PORT}:${AUTHENTICATION_PORT}
    environment:
      - PORT=${AUTHENTICATION_PORT}
      - REFRESH_TOKEN=${REFRESH_TOKEN}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
    networks:
      - netservices

volumes:
  vacancy:
  profile:

networks:
  netservices:
    driver: bridge
